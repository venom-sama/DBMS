CREATE DATABASE ps8;
USE ps8;
CREATE TABLE student_records (
sid INT PRIMARY KEY AUTO_INCREMENT,
Sname VARCHAR(100),
class VARCHAR(50),
address VARCHAR(50),
grades CHAR(1),
enroll_date DATE,
subject_name VARCHAR(50),
attendance INT);
INSERT INTO student_records (Sname, class, address, grades, enroll_date, subject_name, attendance) VALUES
("ABC", "9th grade", "Nashik", 'A', "2023-10-05", "DBMS", 65),
("PQR", "10th grade", "Pune", 'B', "2023-05-13", "AI", 95),
("XYZ", "9th grade", "Mumbai", 'A', "2023-04-15", "CN", 55);
CREATE VIEW studentview AS
SELECT sid, Sname, grades, attendance
FROM student_records;
SELECT * FROM studentview;
CREATE INDEX sindex ON student_records (Sname);
SHOW INDEX FROM student_records;




//Explanation 

This code sets up a simple student database to manage student records, create a view for selective data access, and demonstrate indexing on a column. Here’s a breakdown:

### 1. Database and Table Setup

1. **Create Database**:
   ```sql
   CREATE DATABASE ps8;
   USE ps8;
   ```
   - Creates and selects the database `ps8` for subsequent operations.

2. **Create `student_records` Table**:
   ```sql
   CREATE TABLE student_records (
     sid INT PRIMARY KEY AUTO_INCREMENT,
     Sname VARCHAR(100),
     class VARCHAR(50),
     address VARCHAR(50),
     grades CHAR(1),
     enroll_date DATE,
     subject_name VARCHAR(50),
     attendance INT
   );
   ```
   - Defines the `student_records` table with columns:
     - `sid`: Student ID, primary key, auto-incremented.
     - `Sname`: Name of the student.
     - `class`: Grade level or class of the student.
     - `address`: Location of the student.
     - `grades`: Grade assigned to the student (single character, like 'A' or 'B').
     - `enroll_date`: Date the student enrolled in the course.
     - `subject_name`: Subject the student is studying.
     - `attendance`: Attendance percentage for the student.

3. **Insert Sample Data**:
   ```sql
   INSERT INTO student_records (Sname, class, address, grades, enroll_date, subject_name, attendance) VALUES
     ("ABC", "9th grade", "Nashik", 'A', "2023-10-05", "DBMS", 65),
     ("PQR", "10th grade", "Pune", 'B', "2023-05-13", "AI", 95),
     ("XYZ", "9th grade", "Mumbai", 'A', "2023-04-15", "CN", 55);
   ```
   - Inserts three sample records into `student_records` for students with details such as name, class, address, grades, enrollment date, subject, and attendance percentage.

### 2. Creating a View

1. **Create `studentview` View**:
   ```sql
   CREATE VIEW studentview AS
   SELECT sid, Sname, grades, attendance
   FROM student_records;
   ```
   - Defines a view called `studentview` to simplify access to selected columns from `student_records`.
   - This view displays:
     - `sid`: Student ID
     - `Sname`: Student’s name
     - `grades`: Student’s grade
     - `attendance`: Attendance percentage

2. **Select Data from the View**:
   ```sql
   SELECT * FROM studentview;
   ```
   - Retrieves and displays data from the `studentview`, showing a summarized version of the `student_records` table.

### 3. Indexing

1. **Create Index on `Sname`**:
   ```sql
   CREATE INDEX sindex ON student_records (Sname);
   ```
   - Creates an index `sindex` on the `Sname` column of the `student_records` table to speed up searches by student name.

2. **Display Index Information**:
   ```sql
   SHOW INDEX FROM student_records;
   ```
   - Shows details of all indexes on the `student_records` table, including `sindex`.

### Summary

This code creates a database and a `student_records` table, stores sample student data, and establishes a view (`studentview`) for easy access to specific columns. It also demonstrates the use of an index on the `Sname` column to optimize query performance for student names.